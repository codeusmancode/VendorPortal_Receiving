package com.usaparel.model.AM;

import com.usaparel.model.AM.common.AppModule;


import java.sql.CallableStatement;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Types;

import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewLinkImpl;
import oracle.jbo.server.ViewObjectImpl;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 07 10:35:21 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl implements AppModule {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }

    /**
     * Container's getter for VOPacksAll1.
     * @return VOPacksAll1
     */
    public ViewObjectImpl getVOPacksAll1() {
        return (ViewObjectImpl) findViewObject("VOPacksAll1");
    }

    /**
     * Container's getter for VOCustScannedPacks1.
     * @return VOCustScannedPacks1
     */
    public ViewObjectImpl getVOCustScannedPacks1() {
        return (ViewObjectImpl) findViewObject("VOCustScannedPacks1");
    }
    
    /**
     * This method will return the total number of rows agains a packing id
     */
    public int getScannedPacks(int packingID){
        PreparedStatement pst = null;
        ResultSet rs = null;
        
        try{
            pst = getDBTransaction().createPreparedStatement("select * from cust_scanned_lines where packing_id = ?", 0);
            pst.setInt(1, packingID);
            rs = pst.executeQuery();
            if (rs.next())
                return 1;
            else
                return 0;
        }catch(Exception ex){
            ex.printStackTrace();
            return -1;
        }finally{
            try{
                if (rs != null)
                    rs.close();
                if (pst != null)
                    pst.close();
            }catch(Exception ex1){
                
            }
        }
        
        /*
        ViewObjectImpl vo = getVOCustScannedPacks1();
        vo.setWhereClause("packing_id="+packingID);
        vo.executeQuery();
        int count = vo.getAllRowsInRange().length;
        System.out.println("total packs: "+count);
        vo.setWhereClause(null);
        vo.executeQuery();
        return count;*/
        
    }

    public int challanExists(int challan_id){
        PreparedStatement pst = null;
        ResultSet rs = null;
        
        try{
            pst = getDBTransaction().createPreparedStatement("select * from cust_scanned_header where delivery_challan = ?", 0);
            pst.setInt(1, challan_id);
            rs = pst.executeQuery();
            if (rs.next())
                return 1;
            else
                return 0;
        }catch(Exception ex){
            ex.printStackTrace();
            return -1;
        }finally{
            try{
                if (rs != null)
                    rs.close();
                if (pst != null)
                    pst.close();
            }catch(Exception ex1){
                
            }
        }
        
        /*
        ViewObjectImpl vo = getVOCustScannedPacks1();
        vo.setWhereClause("packing_id="+packingID);
        vo.executeQuery();
        int count = vo.getAllRowsInRange().length;
        System.out.println("total packs: "+count);
        vo.setWhereClause(null);
        vo.executeQuery();
        return count;*/
        
    }
    
    /**
     * This method will update the status of pack and shipment quantity
     */
    public int adjustQuantity(int newShipID,int newPackingID,int newStatus, int newPackingQty,int newQuantity){
        int returnStatus;
        CallableStatement cst = null;
        try {
            cst =
                this.getDBTransaction()
                .createCallableStatement("begin ? := " + "cust_adjust_shipment_qty(?,?,?,?,?)" + "; end;", 0);
            cst.registerOutParameter(1, Types.INTEGER);
            cst.setObject(2, newShipID);
            cst.setObject(3,newStatus);
            cst.setObject(4, newPackingID);
            cst.setObject(5,newPackingQty);
            cst.setObject(6,newQuantity);
            
            cst.executeUpdate();

            int returnFromMethod = cst.getInt(1);
            return  returnFromMethod;
        } catch (Exception e) {
            e.printStackTrace();
            return -1;
        } finally {
            if (cst != null) {
                try {
                    cst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }
    /**
     * This method will update status of packet.PARAMETER "S" IS USELESS. REMOVE IT IN FUTURE WHEN YOU HAVE TIME.
     */
    public int initialStatus(int pid, int s){
        int returnStatus;
        CallableStatement cst = null;
        try {
            cst =
                this.getDBTransaction()
                .createCallableStatement("begin ? := " + "cust_change_pack_status(?,?)" + "; end;", 0);
            cst.registerOutParameter(1, Types.INTEGER);
            cst.setObject(2, pid);
            cst.setObject(3,"SCANNED");
            
            cst.executeUpdate();

            int returnFromMethod = cst.getInt(1);
            return  returnFromMethod;
        } catch (Exception e) {
            e.printStackTrace();
            return -1;
        } finally {
            if (cst != null) {
                try {
                    cst.close();
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * Container's getter for VOShipStatus1.
     * @return VOShipStatus1
     */
    public ViewObjectImpl getVOShipStatus1() {
        return (ViewObjectImpl) findViewObject("VOShipStatus1");
    }

    /**
     * Container's getter for VOCustScannedHeader1.
     * @return VOCustScannedHeader1
     */
    public ViewObjectImpl getVOCustScannedHeader1() {
        return (ViewObjectImpl) findViewObject("VOCustScannedHeader1");
    }

    /**
     * Container's getter for VOCustScannedLines1.
     * @return VOCustScannedLines1
     */
    public ViewObjectImpl getVOCustScannedLines1() {
        return (ViewObjectImpl) findViewObject("VOCustScannedLines1");
    }

    /**
     * Container's getter for VOCustScannedLines2.
     * @return VOCustScannedLines2
     */
    public ViewObjectImpl getVOCustScannedLines2() {
        return (ViewObjectImpl) findViewObject("VOCustScannedLines2");
    }

    /**
     * Container's getter for ScanHeaderLines1.
     * @return ScanHeaderLines1
     */
    public ViewLinkImpl getScanHeaderLines1() {
        return (ViewLinkImpl) findViewLink("ScanHeaderLines1");
    }

    /**
     * Container's getter for VOChallansAll1.
     * @return VOChallansAll1
     */
    public ViewObjectImpl getVOChallansAll1() {
        return (ViewObjectImpl) findViewObject("VOChallansAll1");
    }

    /**
     * Container's getter for VOChallanLinesAll1.
     * @return VOChallanLinesAll1
     */
    public ViewObjectImpl getVOChallanLinesAll1() {
        return (ViewObjectImpl) findViewObject("VOChallanLinesAll1");
    }

    /**
     * Container's getter for ChallanWiseInvalidQty1.
     * @return ChallanWiseInvalidQty1
     */
    public ViewObjectImpl getChallanWiseInvalidQty1() {
        return (ViewObjectImpl) findViewObject("ChallanWiseInvalidQty1");
    }

    /**
     * Container's getter for InvalidQtuSupplierWise1.
     * @return InvalidQtuSupplierWise1
     */
    public ViewObjectImpl getInvalidQtuSupplierWise1() {
        return (ViewObjectImpl) findViewObject("InvalidQtuSupplierWise1");
    }

    /**
     * Container's getter for TEST1.
     * @return TEST1
     */
    public ViewObjectImpl getTEST1() {
        return (ViewObjectImpl) findViewObject("TEST1");
    }
}

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Dec 18 11:41:20 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
