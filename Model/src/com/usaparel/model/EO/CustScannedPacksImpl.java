package com.usaparel.model.EO;

import java.math.BigDecimal;

import java.sql.Date;
import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Aug 11 02:30:42 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CustScannedPacksImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        PoHeaderId,
        PoLineId,
        ItemId,
        ShipId,
        ShipQty,
        PackingId,
        PackingQty,
        ScannedDate,
        CreatedDate,
        UpdatedDate,
        CreatedBy,
        UpdatedBy,
        Version,
        Status,
        ReturnQuantity;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int POHEADERID = AttributesEnum.PoHeaderId.index();
    public static final int POLINEID = AttributesEnum.PoLineId.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int SHIPID = AttributesEnum.ShipId.index();
    public static final int SHIPQTY = AttributesEnum.ShipQty.index();
    public static final int PACKINGID = AttributesEnum.PackingId.index();
    public static final int PACKINGQTY = AttributesEnum.PackingQty.index();
    public static final int SCANNEDDATE = AttributesEnum.ScannedDate.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int RETURNQUANTITY = AttributesEnum.ReturnQuantity.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CustScannedPacksImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.usaparel.model.EO.CustScannedPacks");
    }


    /**
     * Gets the attribute value for PoHeaderId, using the alias name PoHeaderId.
     * @return the value of PoHeaderId
     */
    public BigDecimal getPoHeaderId() {
        return (BigDecimal) getAttributeInternal(POHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoHeaderId.
     * @param value value to set the PoHeaderId
     */
    public void setPoHeaderId(BigDecimal value) {
        setAttributeInternal(POHEADERID, value);
    }


    /**
     * Gets the attribute value for PoLineId, using the alias name PoLineId.
     * @return the value of PoLineId
     */
    public BigDecimal getPoLineId() {
        return (BigDecimal) getAttributeInternal(POLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoLineId.
     * @param value value to set the PoLineId
     */
    public void setPoLineId(BigDecimal value) {
        setAttributeInternal(POLINEID, value);
    }

    /**
     * Gets the attribute value for ItemId, using the alias name ItemId.
     * @return the value of ItemId
     */
    public BigDecimal getItemId() {
        return (BigDecimal) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemId.
     * @param value value to set the ItemId
     */
    public void setItemId(BigDecimal value) {
        setAttributeInternal(ITEMID, value);
    }


    /**
     * Gets the attribute value for ShipId, using the alias name ShipId.
     * @return the value of ShipId
     */
    public BigDecimal getShipId() {
        return (BigDecimal) getAttributeInternal(SHIPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipId.
     * @param value value to set the ShipId
     */
    public void setShipId(BigDecimal value) {
        setAttributeInternal(SHIPID, value);
    }

    /**
     * Gets the attribute value for ShipQty, using the alias name ShipQty.
     * @return the value of ShipQty
     */
    public BigDecimal getShipQty() {
        return (BigDecimal) getAttributeInternal(SHIPQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShipQty.
     * @param value value to set the ShipQty
     */
    public void setShipQty(BigDecimal value) {
        setAttributeInternal(SHIPQTY, value);
    }

    /**
     * Gets the attribute value for PackingId, using the alias name PackingId.
     * @return the value of PackingId
     */
    public BigDecimal getPackingId() {
        return (BigDecimal) getAttributeInternal(PACKINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackingId.
     * @param value value to set the PackingId
     */
    public void setPackingId(BigDecimal value) {
        setAttributeInternal(PACKINGID, value);
    }

    /**
     * Gets the attribute value for PackingQty, using the alias name PackingQty.
     * @return the value of PackingQty
     */
    public BigDecimal getPackingQty() {
        return (BigDecimal) getAttributeInternal(PACKINGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackingQty.
     * @param value value to set the PackingQty
     */
    public void setPackingQty(BigDecimal value) {
        setAttributeInternal(PACKINGQTY, value);
    }

    /**
     * Gets the attribute value for ScannedDate, using the alias name ScannedDate.
     * @return the value of ScannedDate
     */
    public Timestamp getScannedDate() {
        return (Timestamp) getAttributeInternal(SCANNEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScannedDate.
     * @param value value to set the ScannedDate
     */
    public void setScannedDate(Timestamp value) {
        setAttributeInternal(SCANNEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }


    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }


    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Version, using the alias name Version.
     * @return the value of Version
     */
    public BigDecimal getVersion() {
        return (BigDecimal) getAttributeInternal(VERSION);
    }


    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public BigDecimal getStatus() {
        return (BigDecimal) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(BigDecimal value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for ReturnQuantity, using the alias name ReturnQuantity.
     * @return the value of ReturnQuantity
     */
    public BigDecimal getReturnQuantity() {
        return (BigDecimal) getAttributeInternal(RETURNQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReturnQuantity.
     * @param value value to set the ReturnQuantity
     */
    public void setReturnQuantity(BigDecimal value) {
        setAttributeInternal(RETURNQUANTITY, value);
    }


    /**
     * @param packingId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal packingId) {
        return new Key(new Object[] { packingId });
    }

    @Override
    protected void doDML(int i, TransactionEvent transactionEvent) {
        // TODO Implement this method
        if  (i == this.DML_UPDATE){
            setUpdatedBy(BigDecimal.valueOf(Integer.parseInt(ADFContext.getCurrent().getSessionScope().get("userid").toString())));
            //setUpdatedDate(new Timestamp(System.currentTimeMillis()));
        }else if(i == this.DML_INSERT){
            setCreatedBy(BigDecimal.valueOf(Integer.parseInt(ADFContext.getCurrent().getSessionScope().get("userid").toString())));
            //setCreatedDate(new Timestamp(System.currentTimeMillis()));
            setScannedDate(new Timestamp(System.currentTimeMillis()));
        }
        super.doDML(i, transactionEvent);
        
    }
}

