package com.usaparel.model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Dec 21 09:57:44 PKT 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CustScannedLinesImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ScannedLineId,
        PoHeaderId,
        PoLineId,
        ItemId,
        PackingId,
        PackingQty,
        ScannedDate,
        CreatedDate,
        UpdatedDate,
        CreatedBy,
        UpdatedBy,
        Version,
        Status,
        ReturnQuantity,
        ScanHeaderId,
        BadQty,
        MissingQty,
        ShortQty,
        CustScannedHeader;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SCANNEDLINEID = AttributesEnum.ScannedLineId.index();
    public static final int POHEADERID = AttributesEnum.PoHeaderId.index();
    public static final int POLINEID = AttributesEnum.PoLineId.index();
    public static final int ITEMID = AttributesEnum.ItemId.index();
    public static final int PACKINGID = AttributesEnum.PackingId.index();
    public static final int PACKINGQTY = AttributesEnum.PackingQty.index();
    public static final int SCANNEDDATE = AttributesEnum.ScannedDate.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int VERSION = AttributesEnum.Version.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int RETURNQUANTITY = AttributesEnum.ReturnQuantity.index();
    public static final int SCANHEADERID = AttributesEnum.ScanHeaderId.index();
    public static final int BADQTY = AttributesEnum.BadQty.index();
    public static final int MISSINGQTY = AttributesEnum.MissingQty.index();
    public static final int SHORTQTY = AttributesEnum.ShortQty.index();
    public static final int CUSTSCANNEDHEADER = AttributesEnum.CustScannedHeader.index();

    /**
     * This is the default constructor (do not remove).
     */
    public CustScannedLinesImpl() {
    }

    /**
     * Gets the attribute value for ScannedLineId, using the alias name ScannedLineId.
     * @return the value of ScannedLineId
     */
    public BigDecimal getScannedLineId() {
        return (BigDecimal) getAttributeInternal(SCANNEDLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScannedLineId.
     * @param value value to set the ScannedLineId
     */
    public void setScannedLineId(BigDecimal value) {
        setAttributeInternal(SCANNEDLINEID, value);
    }

    /**
     * Gets the attribute value for PoHeaderId, using the alias name PoHeaderId.
     * @return the value of PoHeaderId
     */
    public BigDecimal getPoHeaderId() {
        return (BigDecimal) getAttributeInternal(POHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoHeaderId.
     * @param value value to set the PoHeaderId
     */
    public void setPoHeaderId(BigDecimal value) {
        setAttributeInternal(POHEADERID, value);
    }

    /**
     * Gets the attribute value for PoLineId, using the alias name PoLineId.
     * @return the value of PoLineId
     */
    public BigDecimal getPoLineId() {
        return (BigDecimal) getAttributeInternal(POLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PoLineId.
     * @param value value to set the PoLineId
     */
    public void setPoLineId(BigDecimal value) {
        setAttributeInternal(POLINEID, value);
    }

    /**
     * Gets the attribute value for ItemId, using the alias name ItemId.
     * @return the value of ItemId
     */
    public BigDecimal getItemId() {
        return (BigDecimal) getAttributeInternal(ITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ItemId.
     * @param value value to set the ItemId
     */
    public void setItemId(BigDecimal value) {
        setAttributeInternal(ITEMID, value);
    }

    /**
     * Gets the attribute value for PackingId, using the alias name PackingId.
     * @return the value of PackingId
     */
    public BigDecimal getPackingId() {
        return (BigDecimal) getAttributeInternal(PACKINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackingId.
     * @param value value to set the PackingId
     */
    public void setPackingId(BigDecimal value) {
        setAttributeInternal(PACKINGID, value);
    }

    /**
     * Gets the attribute value for PackingQty, using the alias name PackingQty.
     * @return the value of PackingQty
     */
    public BigDecimal getPackingQty() {
        return (BigDecimal) getAttributeInternal(PACKINGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PackingQty.
     * @param value value to set the PackingQty
     */
    public void setPackingQty(BigDecimal value) {
        setAttributeInternal(PACKINGQTY, value);
    }

    /**
     * Gets the attribute value for ScannedDate, using the alias name ScannedDate.
     * @return the value of ScannedDate
     */
    public Timestamp getScannedDate() {
        return (Timestamp) getAttributeInternal(SCANNEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScannedDate.
     * @param value value to set the ScannedDate
     */
    public void setScannedDate(Timestamp value) {
        setAttributeInternal(SCANNEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedDate.
     * @param value value to set the CreatedDate
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedDate.
     * @param value value to set the UpdatedDate
     */
    public void setUpdatedDate(Timestamp value) {
        setAttributeInternal(UPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public BigDecimal getCreatedBy() {
        return (BigDecimal) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(BigDecimal value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public BigDecimal getUpdatedBy() {
        return (BigDecimal) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(BigDecimal value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Version, using the alias name Version.
     * @return the value of Version
     */
    public BigDecimal getVersion() {
        return (BigDecimal) getAttributeInternal(VERSION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Version.
     * @param value value to set the Version
     */
    public void setVersion(BigDecimal value) {
        setAttributeInternal(VERSION, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for ReturnQuantity, using the alias name ReturnQuantity.
     * @return the value of ReturnQuantity
     */
    public BigDecimal getReturnQuantity() {
        return (BigDecimal) getAttributeInternal(RETURNQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ReturnQuantity.
     * @param value value to set the ReturnQuantity
     */
    public void setReturnQuantity(BigDecimal value) {
        setAttributeInternal(RETURNQUANTITY, value);
    }

    /**
     * Gets the attribute value for ScanHeaderId, using the alias name ScanHeaderId.
     * @return the value of ScanHeaderId
     */
    public BigDecimal getScanHeaderId() {
        return (BigDecimal) getAttributeInternal(SCANHEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ScanHeaderId.
     * @param value value to set the ScanHeaderId
     */
    public void setScanHeaderId(BigDecimal value) {
        setAttributeInternal(SCANHEADERID, value);
    }

    /**
     * Gets the attribute value for BadQty, using the alias name BadQty.
     * @return the value of BadQty
     */
    public BigDecimal getBadQty() {
        return (BigDecimal) getAttributeInternal(BADQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for BadQty.
     * @param value value to set the BadQty
     */
    public void setBadQty(BigDecimal value) {
        setAttributeInternal(BADQTY, value);
    }

    /**
     * Gets the attribute value for MissingQty, using the alias name MissingQty.
     * @return the value of MissingQty
     */
    public BigDecimal getMissingQty() {
        return (BigDecimal) getAttributeInternal(MISSINGQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MissingQty.
     * @param value value to set the MissingQty
     */
    public void setMissingQty(BigDecimal value) {
        setAttributeInternal(MISSINGQTY, value);
    }

    /**
     * Gets the attribute value for ShortQty, using the alias name ShortQty.
     * @return the value of ShortQty
     */
    public BigDecimal getShortQty() {
        return (BigDecimal) getAttributeInternal(SHORTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ShortQty.
     * @param value value to set the ShortQty
     */
    public void setShortQty(BigDecimal value) {
        setAttributeInternal(SHORTQTY, value);
    }

    /**
     * @return the associated entity CustScannedHeaderImpl.
     */
    public CustScannedHeaderImpl getCustScannedHeader() {
        return (CustScannedHeaderImpl) getAttributeInternal(CUSTSCANNEDHEADER);
    }

    /**
     * Sets <code>value</code> as the associated entity CustScannedHeaderImpl.
     */
    public void setCustScannedHeader(CustScannedHeaderImpl value) {
        setAttributeInternal(CUSTSCANNEDHEADER, value);
    }

    /**
     * @param scannedLineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal scannedLineId) {
        return new Key(new Object[] { scannedLineId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.usaparel.model.EO.CustScannedLines");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        switch(operation){
        case DML_INSERT:
            setScannedDate(new Timestamp(System.currentTimeMillis()));
            setCreatedBy(new BigDecimal(ADFContext.getCurrent().getSessionScope().get("userid").toString()));
            setUpdatedBy(new BigDecimal(ADFContext.getCurrent().getSessionScope().get("userid").toString()));            
            break;
        case DML_UPDATE:
            
            setUpdatedBy(new BigDecimal(ADFContext.getCurrent().getSessionScope().get("userid").toString()));
            break;
        }
        super.doDML(operation, e);
    }
}

